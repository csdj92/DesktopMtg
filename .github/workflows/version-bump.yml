name: Version Bump and Release

on:
  push:
    branches: [ master, main ]
  workflow_dispatch:
    inputs:
      version_type:
        description: 'Version bump type'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  contents: write
  pull-requests: write

jobs:
  version-bump:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.head_commit.message, 'chore(release)') }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Determine version bump type
        id: bump-type
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "type=${{ github.event.inputs.version_type }}" >> $GITHUB_OUTPUT
          else
            # Analyze commit messages for conventional commits
            COMMITS=$(git log --pretty=format:"%s" ${{ github.event.before }}..${{ github.event.after }})
            
            if echo "$COMMITS" | grep -q "BREAKING CHANGE\|feat!:\|fix!:\|chore!:"; then
              echo "type=major" >> $GITHUB_OUTPUT
            elif echo "$COMMITS" | grep -q "^feat"; then
              echo "type=minor" >> $GITHUB_OUTPUT
            elif echo "$COMMITS" | grep -q "^fix\|^docs\|^style\|^refactor\|^perf\|^test\|^chore"; then
              echo "type=patch" >> $GITHUB_OUTPUT
            else
              echo "type=none" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Bump version
        id: version
        if: steps.bump-type.outputs.type != 'none'
        run: |
          # Get current version
          CURRENT_VERSION=$(node -pe "require('./package.json').version")
          echo "Current version: $CURRENT_VERSION"
          
          # Bump version
          npm version ${{ steps.bump-type.outputs.type }} --no-git-tag-version
          
          # Get new version
          NEW_VERSION=$(node -pe "require('./package.json').version")
          echo "New version: $NEW_VERSION"
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          
          # Commit changes
          git add package.json package-lock.json
          git commit -m "chore(release): bump version to v$NEW_VERSION"
          git push origin ${{ github.ref_name }}

      - name: Create and push tag
        if: steps.bump-type.outputs.type != 'none'
        run: |
          TAG="v${{ steps.version.outputs.version }}"
          git tag $TAG
          git push origin $TAG
          echo "Created and pushed tag: $TAG"

      - name: Create Release Notes
        if: steps.bump-type.outputs.type != 'none'
        id: release-notes
        run: |
          TAG="v${{ steps.version.outputs.version }}"
          
          # Generate release notes from commits
          COMMITS=$(git log --pretty=format:"- %s (%h)" $(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")..HEAD | grep -v "chore(release)")
          
          cat > release_notes.md << EOF
          ## What's Changed
          
          $COMMITS
          
          **Full Changelog**: https://github.com/${{ github.repository }}/compare/$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")...$TAG
          EOF
          
          echo "Release notes created"

      - name: Summary
        if: steps.bump-type.outputs.type != 'none'
        run: |
          echo "## ✅ Version Bump Complete!" >> $GITHUB_STEP_SUMMARY
          echo "- **Version**: ${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Bump Type**: ${{ steps.bump-type.outputs.type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: v${{ steps.version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Tag pushed successfully - Release workflow will trigger automatically" >> $GITHUB_STEP_SUMMARY

      - name: No version bump needed
        if: steps.bump-type.outputs.type == 'none'
        run: |
          echo "## ℹ️ No Version Bump Needed" >> $GITHUB_STEP_SUMMARY
          echo "No conventional commit patterns found that require a version bump." >> $GITHUB_STEP_SUMMARY
          echo "Use conventional commit messages like:" >> $GITHUB_STEP_SUMMARY
          echo "- \`feat: add new feature\` (minor bump)" >> $GITHUB_STEP_SUMMARY
          echo "- \`fix: resolve bug\` (patch bump)" >> $GITHUB_STEP_SUMMARY
          echo "- \`feat!: breaking change\` (major bump)" >> $GITHUB_STEP_SUMMARY 